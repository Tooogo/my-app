{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 7, "column": 0}, "map": {"version":3,"sources":["file:///Users/togo/my-app/src/app/%5Blocale%5D/family/%5Bid%5D/layout.tsx"],"sourcesContent":["import type { Metadata } from \"next\";\nimport { Geist, Geist_Mono } from \"next/font/google\";\n//import \"./globals.css\";\nimport { Inter } from 'next/font/google';\n// import { useTranslation } from 'next-i18next';\nimport Link from 'next/link'\nimport { getProfileWithNameAndID } from \"../../../services\";\nimport {NextIntlClientProvider, useMessages} from 'next-intl';\n\nconst geistSans = Geist({\n  variable: \"--font-geist-sans\",\n  subsets: [\"latin\"],\n});\n\nconst geistMono = Geist_Mono({\n  variable: \"--font-geist-mono\",\n  subsets: [\"latin\"],\n});\n\nexport const metadata: Metadata = {\n  title: \"Create Next App\",\n  description: \"Generated by create next app\",\n};\n\n\nexport default async function RootLayout({\n    children,\n    params \n}: { \n    children: React.ReactNode;\nparams: { locale: string }; \n}) {\n  const { locale } = await params;\n  const profiles = await getProfileWithNameAndID(locale); // サーバーで直接データ取得\n\n  return (\n    <html lang={locale}>\n      <body>\n        <nav>\n          <Link key=\"home\" href=\"/\">Home</Link>\n          {profiles.map((profile, index) => (\n            <Link key={index} href={`/${locale}/family/${profile._id}`}>\n              {profile.name}\n            </Link>\n          ))}\n        </nav>\n        {children}\n      </body>\n    </html>\n  );\n\n}\n\n/*\nexport default function RootLayout({\n  children, params: {locale}\n}: Readonly<{\n  children: React.ReactNode;\n}>) {\n  const messages = useMessages();\n\n  return (\n    <html lang=\"en\">\n      <body\n        className={`${geistSans.variable} ${geistMono.variable} antialiased`}\n      >\n        <NextIntlClientProvider locale={locale} messages={messages}>\n          {children}\n        </NextIntlClientProvider>\n\n      </body>\n    </html>\n  );\n}\n*/\n"],"names":[],"mappings":";;;;;;;AAIA,iDAAiD;AACjD;AACA;;;;;;AAaO,MAAM,WAAqB;IAChC,OAAO;IACP,aAAa;AACf;AAGe,eAAe,WAAW,EACrC,QAAQ,EACR,MAAM,EAIT;IACC,MAAM,EAAE,MAAM,EAAE,GAAG,MAAM;IACzB,MAAM,WAAW,MAAM,CAAA,GAAA,+HAAA,CAAA,0BAAuB,AAAD,EAAE,SAAS,eAAe;IAEvE,qBACE,8OAAC;QAAK,MAAM;kBACV,cAAA,8OAAC;;8BACC,8OAAC;;sCACC,8OAAC,4JAAA,CAAA,UAAI;4BAAY,MAAK;sCAAI;2BAAhB;;;;;wBACT,SAAS,GAAG,CAAC,CAAC,SAAS,sBACtB,8OAAC,4JAAA,CAAA,UAAI;gCAAa,MAAM,CAAC,CAAC,EAAE,OAAO,QAAQ,EAAE,QAAQ,GAAG,EAAE;0CACvD,QAAQ,IAAI;+BADJ;;;;;;;;;;;gBAKd;;;;;;;;;;;;AAKT,EAEA;;;;;;;;;;;;;;;;;;;;;AAqBA"}},
    {"offset": {"line": 91, "column": 0}, "map": {"version":3,"sources":[],"names":[],"mappings":"A"}}]
}